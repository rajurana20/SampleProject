@model SampleProject.Models.CustomerViewModel

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

<script src="~/Scripts/jquery-3.1.1.min.js"></script>
<script>

   


        $(document).ready(function () {

            $("#imageBrowes").change(function () {

                var File = this.files;

                if (File && File[0]) {
                    ReadImage(File[0]);
                }

            })


        })


    var ReadImage = function (file) {

        var reader = new FileReader;
        var image = new Image;

        reader.readAsDataURL(file);
        reader.onload = function (_file) {

            image.src = _file.target.result;
        image.onload = function () {

                var height = this.height;
                var width = this.width;
                var type = file.type;
                var size = ~~(file.size / 1024) + "KB";

                $("#targetImg").attr('src', _file.target.result);
                $("#description").text("Size:" + size + ", " + height + "X " + width + ", " + type + "");
                $("#imgPreview").show();

            }

        }

    }

    var ClearPreview = function () {
            $("#imageBrowes").val('');
        $("#description").text('');
        $("#imgPreview").hide();

    }

</script>


@using (Html.BeginForm("Create","Customer",FormMethod.Post, new { enctype="multipart/form-data"}))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Customer</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.CName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>




        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Services, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <dl class="dl-horizontal">
                    @for (int i = 0; i < Model.Services.Count(); i++)
                    {
                        <dt> @Html.EditorFor(model => model.Services[i].Checked)</dt>

                        <dd> @Html.DisplayFor(model => model.Services[i].SName)</dd>

                        @Html.HiddenFor(model => model.Services[i].SName)

                        @Html.HiddenFor(model => model.Services[i].SId)



                    }

                </dl>
            </div>
        </div>

        <div class="form-group">
              @Html.LabelFor(model => model.Photo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
            
            <input type="file" name="ImageFile" id="imageBrowes"  />
                
                    <hr />

                    <div id="imgPreview" class="thumbnail" style="display:none">
                        <img class="img-responsive" id="targetImg"  width="300" height="300"/>
                        <div class="caption">
                            <a href="#" onclick="ClearPreview()"><i class="glyphicon glyphicon-trash"></i></a>
                            <span id="description"></span>
                        </div>
                    </div>

                </div>

            </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
   </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
